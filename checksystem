#!/bin/bash
###########################################################
Begin()
{
  #########################################################
   
  #grep -A1: noi them du lieu vao bien (file)
  echo "Bat dau qua trinh xu ly du lieu..."
  if [ -n "$1" ]; then
    CONFIG=$1
    NUMProc=$(grep -A1 Processor $CONFIG | tail -1)
    MAXMemory=$(grep -A1 Memory $CONFIG | tail -1)
    TRIM=$(grep -A1 Trim $CONFIG | tail -1)
    ASSEMBLY=$(grep -A1 '^Assembly' $CONFIG | tail -1)
    ATYPE=$(grep -A1 Type $CONFIG | tail -1)
    simC=$(grep -A1 Simi $CONFIG | tail -1)
    MAP=$(grep -A1 Mapping_R $CONFIG | tail -1)
    optA=$(grep -A1 _Match $CONFIG | tail -1)
    optB=$(grep -A1 MisMatch $CONFIG | tail -1)
    optO=$(grep -A1 Gap $CONFIG | tail -1)
    SNP=$(grep -A1 SNP $CONFIG | tail -1)
    MAIL=$(grep -A1 Email $CONFIG | tail -1)
  else
    GetInfoSystem
  fi
  #########################################################
  #echo "Tao thoi gian bat dau xu ly"
  STARTTIME=$(date)
  echo $STARTTIME
  
  #########################################################
  ##Cau lenh logic thuc hien va cach thuc thuc hien chuong trinh song song
  ##Doan nay la khai bao 2 chuong trinh se duoc thuc hien
  if [[ "$TRIM" == "yes" && "$ASSEMBLY" == "yes" ]]; then
    echo "Trimming reads va assembling reference sequences" 
    TrimReads & 2> trim.log
    Assemble
    #setupRainbow 2> rainbow.log
    wait
  fi
  ##De chay song song 2 chuong trinh thi can khai bao ca 2
  ##Bang cac cau lenh doc lap
  ##TrimRead
  if [[ "$TRIM" == "yes" && "$ASSEMBLY" != "yes" ]]; then
    echo "Trimming reads"
    TrimReads 2> trim.log
  fi
  ##Assemble
  if [[ "$TRIM" != "yes" && "$ASSEMBLY" == "yes" ]]; then
    Assemble
    #setupRainbow 2> rainbow.log
  fi

}
  ##################KET THUC HAM BEGIN####################

  ##########FUNCTION HERE!!!!!!!!!!!!!!!!!!!!#############
  #Function for trimming reads using trimmomatic
  TrimReads()
  {
    for i in "${NAMES[@]}";
    do
      zcat $i.F.fq.gz | head -2 | tail -1 >> lengths.txt
      done
      MLen=$(mawk '{ print length() | "sort -rn" }' lengths.txt| head -1)
      MLen=$(($MLen / 2))
    TW="MINLEN:$MLen"
    for i in "${NAMES[@]}"
    do
      #echo "Dang tien hanh cut adapter va quality cho ca the thu $i"
      if [ -f $i.R.fq.gz ]; then
        java -jar $TRIMMOMATIC PE -threads $NUMProc -phred33 $i.F.fq.gz $i.R.fq.gz $i.R1.fq.gz $i.unpairedF.fq.gz $i.R2.fq.gz $i.unpairedR.fq.gz ILLUMINACLIP:$ADAPTERS:2:30:10 LEADING:20 TRAILING:20 SLIDINGWINDOW:5:10 $TW &> $i.trim.log
        else
          java -jar $TRIMMOMATIC SE -threads $NUMProc -phred33 $i.F.fq.gz $i.R1.fq.gz ILLUMINACLIP:$ADAPTERS:2:30:10 LEADING:20 TRAILING:20 SLIDINGWINDOW:5:10 $TW &> $i.trim.log
      fi
    done
    mkdir unpaired &>/dev/null
    mv *unpaired*.gz ./unpaired &>/dev/null
  }

  #Main function for assembly
  Assemble()
  {
    AWK1='BEGIN{P=1}{if(P==1||P==2){gsub(/^[@]/,">");print}; if(P==4)P=0; P++}'
    AWK2='!/>/'
    AWK3='!/NNN/'
    PERLT='while (<>) {chomp; $z{$_}++;} while(($k,$v) = each(%z)) {print "$v\t$k\n";}'
    SED1='s/^[ 	]*//'
    SED2='s/ /	/g'
    FRL=$(zcat ${NAMES[0]}.F.fq.gz | mawk '{ print length() | "sort -rn" }' | head -1)
    if [ ${NAMES[@]:(-1)}.F.fq.gz -nt ${NAMES[@]:(-1)}.uniq.seqs ];then
      if [[ "$ATYPE" == "PE" || "$ATYPE" == "RPE" ]]; then
        #If kieu trinh tu la PE can phai noi cac file F va R lai thanh 1 file
        cat namelist | parallel --no-notice -j $NUMProc "zcat {}.F.fq.gz | mawk '$AWK1' | mawk '$AWK2' > {}.forward"
        cat namelist | parallel --no-notice -j $NUMProc "zcat {}.R.fq.gz | mawk '$AWK1' | mawk '$AWK2' > {}.reverse"
        if [ "$ATYPE" = "RPE" ]; then
          cat namelist | parallel --no-notice -j $NUMProc "paste -d '-' {}.forward {}.reverse | mawk '$AWK3'| sed 's/-/NNNNNNNNNN/' | sort | uniq -c -w $FRL| sed -e '$SED1' | sed -e '$SED2' > {}.uniq.seqs"
          else
           cat namelist | parallel --no-notice -j $NUMProc "paste -d '-' {}.forward {}.reverse | mawk '$AWK3'| sed 's/-/NNNNNNNNNN/' | perl -e '$PERLT' > {}.uniq.seqs"
        fi
        rm *.forward
        rm *.reverse
      fi
      #if SE assembly, creates files of every unique read for each individual in parallel
      if [ "$ATYPE" == "SE" ]; then
        cat namelist | parallel --no-notice -j $NUMProc "zcat {}.F.fq.gz | mawk '$AWK1' | mawk '$AWK2' | perl -e '$PERLT' > {}.uniq.seqs"
      fi
      #If OL assembly, dDocent assumes that the marjority of PE reads will overlap, so the software PEAR is used to merge paired reads into single reads
      if [ "$ATYPE" == "OL" ]; then
        for i in "${NAMES[@]}";
        do
          zcat $i.R.fq.gz | head -2 | tail -1 >> lengths.txt
        done
        MaxLen=$(mawk '{ print length() | "sort -rn" }' lengths.txt| head -1)
        LENGTH=$(( $MaxLen / 3))
        for i in "${NAMES[@]}"
        do
          pearRM -f $i.F.fq.gz -r $i.R.fq.gz -o $i -j $NUMProc -n $LENGTH 
        done
        cat namelist | parallel --no-notice -j $NUMProc "mawk '$AWK1' {}.assembled.fastq | mawk '$AWK2' | perl -e '$PERLT' > {}.uniq.seqs"
      fi
    fi
  }
 
  ##############        KIEM TRA TU DAU         ##########
  GetInfoSystem()
  {
     
    echo "Kiem tra thong so CPU..."
    NUMProc=( `grep -c ^processor /proc/cpuinfo 2> /dev/null` )
    NUMProc=$(($NUMProc + 0))
    echo "Co tong so "$NUMProc "tren Server"
    echo "Xin cho biet so Cores toi da duoc phep su dung: "
    read cores
    if [ "$cores" -lt "1" ]; then
      echo "Nhap lai so Cores CPU toi da duoc phep su dung phai nho hon "$NUMProc "va lon hon 1"
      read cores
    fi
    if [ "$cores" -lt "1" ]; then
      echo "Ban da nhap sai, THOAT..."
    fi

    ###########################################################
     
    echo "Kiem tra thong so RAM..."
    MAXMemory=$(($(grep -Po '(?<=^MemTotal:)\s*[0-9]+' /proc/meminfo | tr -d " ") / 1048576))
    MAXMemory=$(($MAXMemory + 0))
    echo "Co tong so "$MAXMemory "Gigabyte tren Server hien tai"
    echo "Xin cho biet dung luong RAM toi da duoc phep su dung: "
    read ram
    while [[ "$ram" -gt $MAXMemory ]]||[[ "$ram" -lt "0" ]];
    do
      echo "Dung luong RAM phai <="$MAXMemory "va >=1"
      read ram
    done

    ###########################################################
     
    echo "Ban co can loai bo trinh tu co chat luong xau, yes (no)?"
    read TRIM

    ###########################################################
     
    echo "Ban co muon tao file reference.fasta, yes(no)?"
    read ASSEMBLY
    if [ "$ASSEMBLY" == "no"  ]; then
      echo -e "Reference phai co dinh dang file name: reference.fasta"
      RefFile=$(ls reference.fasta 2> /dev/null| wc -l)
     if [ "$RefFile" == "1" ]; then
       echo "Ban da co file reference.fasta trong thu muc hien tai"
     else
       echo "Ban can copy file reference.fasta vao day"
     fi
    else
      echo "Nhap kieu trinh tu can tao referencegenome"
      echo "Nhap SE neu la single end"
      echo "PE neu la paired-end"
      echo "RPE neu la paired-end sequencing for RAD protocol with random shearing"
      echo "OL cho kieu paired-end overlap"
      echo -e "Nhap ky tu dai dien va bam Enter cho buoc tiep: "
      read ATYPE
      while [[ $ATYPE != "SE" && $ATYPE != "PE" && $ATYPE != "OL" && $ATYPE != "RPE" ]];
      do
        echo -e "Nhap ky tu dai dien va bam Enter: "
        read ATYPE
      done
    fi
     
    ###########################################################
    if [ "$ASSEMBLY" == "yes" ]; then
      echo "Su dung cong cu Rainbow de noi cac contig"
      echo "CD-HIT tao ra cac nhom trinh tu giong nhau. Tham so -c (% giong nhau de tao cluster)"
      echo "Ban co muon thay doi gia tri mac dinh tham so c?, yes(no) va bam [ENTER]"
      read optC
      if [ "$optC" == "no" ];then
        echo "Gia tri mac dinh la 0.9"
        simC=0.9
        elif [ "$optC" == "yes"  ]; then
         echo "Nhap gia tri cho c: (90%,tuong duong 0.9)"
         read newC
           if ([ "$newC" -lt 0.9 ]&&[ "$newC" -gt 0 ]); then
             simC=newC
             else
               echo "Gia tri tham so c bi sai. Su dung gia tri 0.9 lam gia tri mac dinh"
               simC=0.9
           fi
         else
           echo "Gia tri tham so c bi sai. Su dung gia tri 0.9 lam gia tri mac dinh"
           simC=0.9
      fi
    fi
    ###########################################################
     
    echo "Ban co muon dong hang bang cong cu BWA?, yes (no) va bam [ENTER]"
    read MAP
    if [ "$MAP" == "no" ]; then
      echo "Chuc nang dog hang bang bwa se bo qua"
      optA=1
      optB=4
      optO=6
      else
        echo "Ban co muon thay doi tham so -A, -B, -O cua bwa khong?, yes(no) va bam [ENTER]"
        read optQ
        if [ "$optQ" == "yes" ]; then
          echo "Nhap gia tri cho A (match score). A la so nguyen. Gia tri mac dinh: 1."
          read newA
          optA=$newA
          echo "Nhap gia tri cho B (mismatch score). B la so nguyen. Gia tri mac dinh: 4"
          read newB
          optB=$newB
          echo "Nhap gia tri cho O (gap penalty). O la so nguyen. Gia tri mac dinh: 6."
          read newO
          optO=$newO
          echo "Gia tri moi cua -A -B -O la: "$optA $optB $optO
          else
            echo "Gia tri mac dinh cua -A -B va -O se la gia tri mac dinh: 1 4 6"
            optA=1
            optB=4
            optO=6
        fi
    fi
  ###########################################################
  echo "Ban co muon tim SNP bang freebayes"
  read SNP
  while [[ "$SNP" != "yes" && "$SNP" != "no" ]];
  do
    echo "Cau tra loi bi sai!"
    echo "Ban co muon tim SNP bang freebayes?, yes(no). Bam [ENTER]"
    read SNP
  done
  ###########################################################
  echo "Nhap dia chi email de sau khi hoan tat se gui thong bao qua email"
  read MAIL
  echo "Ban co muon thay doi Email khong?,yes(no) va bam [ENTER]"
  read mailQ
  while [[ "$mailQ" != "yes" && "$mailQ" != "no" ]];
  do
    echo "Cau tra loi bi sai!"
    read mailQ
    if [ "$mailQ" == "yes" ]; then
     echo "email cua ban la: "
      read MAIL
    fi
  done
  echo "Email cua ban la: "$MAIL
  
}
###########################################################

######KET THUC NOI DUNG CHINH########
###########################################################
CheckingFileType()
{
   
  ###########################################################
  echo "====================================================="
  echo "======KIEM TRA DINH DANG FILE DU LIEU DAU VAO========"
  echo "=========CO DUNG DINH DANG *.F.gz HAY CHUA?=========="
  echo "====================================================="
  ###########################################################

  echo "Dem tong so ca the co trong thu muc hien tai.........."
  #NumInd==NumberofIndividuals
  NumInd=$((ls *.gz | wc -l) 2> /dev/null)
  NumInd=$(($NumInd/2))
  echo "Tong so ca the hien tai la: "$NumInd

  #echo "Tao danh sach cac ca the co trong thu muc hien tai"
  ls *.F.fq.gz >namelist
  sed -i'' -e 's/.F.fq.gz//g' namelist
  #echo "Chuyen danh sach cac ca the thanh mang mot chieu"
  NUMNAMES=$(mawk '/_/' namelist | wc -l)
  if [ "$NUMNAMES" -eq "$NumInd" ]; then
    NAMES=( `cat "namelist" `)
    echo "====================================================="
    echo "Ten cua cac ca the da dat chuan theo yeu cau"
    echo "====================================================="
    echo "Press yes de tiep tuc, no de ket thuc kiem tra"
    read check
    while [[ "$check" != "yes" && "$check" != "no" ]];
    do
      echo "Cau tra loi sai!"
      read check
   done
   if [ "$check" != "yes"  ];then
      exit 1;
      else
        Begin
      ##THUC HIEN CHUONG TRINH CHINH
    fi
  else
    echo "====================================================="
    echo "Ten cua cac ca the dat khong dung dinh dang yeu cau..."
    echo "====================================================="
    ls *.gz
    echo "==================================================================="
    echo "Hay doi ten cho cac ca the theo dinh dang: Khuvuc_SoTTcathe.F.fq.gz"
    echo "Hay thuc hien lai ./require them lan nua de phan mem tu dong kiem tra lai"
    echo "==================================================================="
    exit 1
  fi
}

###########################################################
CheckingNameFile()
{
  ###########################################################
   
  echo "====================================================="
  echo "======KIEM TRA DINH DANG FILE DU LIEU DAU VAO========"
  echo "========CO DUNG DINH DANG FILE .GZ HAY CHUA?========="
  echo "====================================================="
  echo -e "\nKiem tra cac file du lieu dau vao phai co dinh dang: *.gz.........."
  #neu khong co 2> /dev/null thi se
  #ls: cannot access *fq: No such file or directory
  FILETYPE=$((ls *.fq 2> /dev/null) | wc -l)
  if [ $FILETYPE -gt 0 ]; then
    echo "Co tong so" $FILETYPE "la file .fq"
    echo "Can phai nen file lai duoi dang .gz"
    echo "Cu phap don gian: gzip *.fq"
    echo "Thuc hien lai lenh ./require de kiem tra lan nua"
  else
    echo "Tat ca cac file du lieu deu la kieu file .gz."
    echo "Ke tiep..."
    echo "Press yes de tiep tuc, no de ket thuc kiem tra"
    read check
    while [[ "$check" != "yes" && "$check" != "no" ]];
    do
      echo "Cau tra loi sai!"
      read check
    done
    if [ "$check" != "yes"  ];then
      Begin
      else
      CheckingFileType
    fi
  fi
}
###########################################################
CheckingConfigSoft()
{
  ###########################################################
   
  echo -e "\nKiem tra cac phien ban co tuong thich voi yeu cau xu ly hay ko?"
  echo "......................................................"
  echo " ==== ||  ||  = ==   ==== || //   ||\\   ||  ===="
  echo "||    ||==|| ||--|| ||    ||// ++ || \\  || ||__"
  echo "||    ||==|| ||     ||    ||\\  || ||  \\ || ||  ||"
  echo " ==== ||  ||  ====   ==== || \\ || ||   \\|| ||__||"
  echo "......................................................"
  echo -e "\nKiem tra trimmomatic.........."
  if find ${PATH//:/ } -maxdepth 1 -name trimmomatic*jar 2> /dev/null| grep -q 'trim' ; then
    TRIMMOMATIC=$(find ${PATH//:/ } -maxdepth 1 -name trimmomatic*jar 2> /dev/null | head -1)
    echo "trimmomatic da cai dat dung duong dan"
  else
    echo "trimmomatic chua duoc cai dat hoac co the thiet lap sai duong dan " '$PATH'"."
    NUMSOF=$((NUMSOF + 1))
  fi
  ###########################################################
   
  echo -e "\nKiem tra adapter cho viec cutadapter.........."
  if find ${PATH//:/ } -maxdepth 1 -name TruSeq2-PE.fa 2> /dev/null | grep -q 'Tru' ; then
    ADAPTERS=$(find ${PATH//:/ } -maxdepth 1 -name TruSeq2-PE.fa 2> /dev/null | head -1)
    echo "Da co day du adpapter cho viec cutadapter"
    else
    echo "trimmomatic cai dat thieu file adpater. Kiem tra lai viec cai dat hoac duong dan " '$PATH'"."
    NUMSOF=$((NUMSOF + 1))
  fi
  ###########################################################
   
  echo -e "\nKiem tra samtools........."
  #SAMV===samversion
  SAMV=$(samtools 2>&1 >/dev/null | grep Ver | sed -e 's/Version://' | cut -f2 -d " " | sed -e 's/-.*//')
  #echo $SAMV
  if [ "$SAMV" != "0.1.19" ]; then
    echo  "The version cai dat cua samtools khong phu hop. de nghi cai dat ban 0.1.19."
    NUMSOF=$((NUMSOF + 1))
    exit 1
  else
    echo "Da cai dat day du thong tin cho samtools"
  fi
  ###########################################################
   
  echo -e "\nKiem tra thong tin cai dat rainbow.........."
  #RAINV==rainbowversion
  RAINV=(`rainbow | head -1 | cut -f2 -d' ' `)
  if [[ "$RAINV" != "2.0.2" && "$RAINV" != "2.0.3" && "$RAINV" != "2.0.4" ]]; then
    echo "Phien ban hien tai khong con phu hop cho cluster va tao reference ban rainbow"
    echo "Phien ban hien tai cua rainbow co phai la 2.0.2?  Enter yes or no."
    read ANSWER
    if [ "$ANSWER" != "yes" ]; then
      echo "Xin vui long cai dat phien ban moi hon 2.02"
      NUMSOF=$((NUMSOF + 1))
      exit 1
    fi
  else
    echo "rainbow voi phien ban "$RAINV "da duoc cai dat day du tren may cua ban"
  fi
  ###########################################################
  #FREEV==freebayesversion
   
  echo -e "\nKiem tra thong tin cai dat cua freebayes"
  FREEV=(`freebayes | grep -oh 'v[0-9].*' | sed 's/-.*//g' `)
  if [ "$FREEV" != "v0.9.21" ]; then
    echo "Cai dat phien ban 0.9.21 de phu hop"
    NUMSOF=$((NUMSOF + 1))
  else
    echo "Phien ban cai dat cua freebayes phu hop voi yeu cau."
  fi
  ###########################################################
  #VCFV==vcftoolsversion
   
  echo -e "\nKiem tra cau hinh vcftools.........."
  VCFV=$(vcftools | grep VCF | sed -e 's/VCFtools (v//' | sed -e 's/)//')
  if [ "$VCFV" != "0.1.11" ]; then
    echo "Cai dat phien ban vcftools 0.1.11 cho phu hop voi yeu cau"
    NUMSOF=$((NUMSOF + 1))
  else
    echo "Phien ban vcftools 0.1.11 da duoc cai dat"
  fi
  ###########################################################

  #Chu y phai co khoang cach trong dau [] neu khong se bao loi
   
  if [ $NUMSOF -gt 0 ]; then
    echo -e "\nCai dat day du cac phan mem truoc khi thuc hien"
    exit 1
    else
      #echo -e thi moi viet duoc \n \t \s...
      echo -e "\nCac phan mem can thiet da duoc cai dat day du. Tiep theo..."
  fi
  echo "Chuyen qua buoc ke tiep?"
  read check
  while [[ "$check" != "yes" && "$check" != "no" ]];
  do
    echo "Cau tra loi sai!"
    read check
  done
  if [ "$check" != "yes"  ];then
    exit 1;
  else
   CheckingNameFile
 fi
}
  ###########################################################
CheckingSoft()
{
   
  ###Kiem tra cac phan mem can thiet
  echo "Kiem tra phan mem can thiet..."
  TOOLS=(freebayes mawk bwa samtools vcftools rainbow gnuplot gawk seqtk cd-hit-est bamToBed bedtools coverageBed parallel vcfcombine bamtools pearRM fastq-stats)
  NUMSOF=0
  for i in "${TOOLS[@]}"
  do
    if which $i &> /dev/null; then
    echo $i "da cai dat thanh cong!"
    echo "--------------------------"
    #foo=0
      else
        echo "Cong cu" $i "chua duoc cai dat hoac can kiem tra lai " '$PATH'"."
        NUMSOF=$((NUMSOF + 1))
    fi
  done
  echo "====================================================="
  echo "||                                                  ||"
  echo "|| Co tong cong" $NUMSOF "phan mem chua duoc cai dat        ||"
  echo "||                                                  ||"
  echo "====================================================="
  echo "Chuyen qua buoc ke tiep?"
  read check
  while [[ "$check" != "yes" && "$check" != "no" ]];
  do
    echo "Cau tra loi sai!"
    read check
  done
  if [ "$check" != "yes"  ];then
    exit 1;
  else
   CheckingConfigSoft
 fi
}
###########################################################
####----++++*****CHUONG TRINH CHINH NAM O DAY****++++----####
 
echo "Ban co muon kiem tra ten cua cac phan mem cai dat tren Server khong?"
read check
while [[ "$check" != "yes" && "$check" != "no" ]]; 
  do
    echo "Cau tra loi sai!"
    read check
  done
  if [ "$check" == "yes" ];then
    CheckingSoft
    else
###########################################################
      echo "Ban co muon kiem tra cau hinh cac phan mem cai dat tren Server khong?"
      read check
      while [[ "$check" != "yes" && "$check" != "no" ]];
      do
         echo "Cau tra loi sai!"
         read check
      done
      if [ "check" == "yes"  ] ; then
        CheckingConfigSoft
        else
          CheckingNameFile
      fi
  fi
