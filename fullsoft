#!/bin/bash
numerr=0
echo "Checking CPU..."
cpu_num=$(grep -c ^processor /proc/cpuinfo 2> /dev/null)
cpu_num=$((cpu_num+0))
cpu_model=$(grep "model name" /proc/cpuinfo 2> /dev/null| uniq)
echo -e "Tong so Cores: "$cpu_num
echo $cpu_model
#echo "Nhap so Cores toi da duoc phep su dung:"
#read cores
#while [[ $cores -lt 1  ||  $cores -gt $cpu_num ]]; do
#  echo "So Cores CPU <= "$cpu_num" va >= 1"
#  read cores
#done

echo "Checking RAM..."
maxmem=$(($(grep -Po '(?<=^MemTotal:)\s*[0-9]+' /proc/meminfo | tr -d " ") / 1000000))
echo "Memory total: "$maxmem"G"
freemem=$(($(grep -Po '(?<=^MemFree:)\s*[0-9]+' /proc/meminfo | tr -d " ") / 1048576))
echo "Free memory: "$freemem"G"
#echo "Nhap so RAM  toi da duoc phep su dung:"
#read mem
#while [[ $mem -lt 1  ||  $mem -gt $freemem ]]; do
#  echo "Dung luong RAM <= "$freemem" va >= 1G"
#  read mem
#done

echo "Checking HDD..."
lsblk

echo "Checking folder programs..."
path=(`pwd | grep -c "programs"`)
if(( $path \> 0 )); then
#  echo "copy file all files to programs folder"
  cd programs
#  echo "press Enter to quit"
#  read answer
  else
    echo "mkdir programs"
    mkdir programs
    cd programs
#    echo "copy all file .sh to here"
    read answer
#    exit
fi

echo "Seting up some requires..."
if ( which make &>/dev/null ) ; then
  echo "make is already installed"
  else
    numerr=$((numerr+1))
    echo "sudo apt-get install make"
    echo "press Enter key"
    read answer
    sudo apt-get install make
fi

if ( which tmux &>/dev/null ) ; then
  echo "tmux is already installed"
  else
    numerr=$((numerr+1))
    echo "type: sudo apt-get install tmux"
    echo "press Enter key"
    read answer
    sudo apt-get install tmux
fi

if( which g++ &>/dev/null ); then
  echo "g++ is already installed"
  else
    numerr=$((numerr+1))
    echo "sudo apt-get install g++"
    echo "press Enter key"
    read answer
    sudo apt-get install g++
fi

if( which git &>/dev/null );then
  echo "git is already installed"
  else
    numerr=$((numerr+1))
    echo "sudo apt-get install git"
    echo "press Enter key"
    read answer
    sudo apt-get install git
fi

if ( which curl &>/dev/null );then
  echo "curl is already installed"
  else
    numerr=$((numerr+1))
    echo "sudo apt-get install curl"
    echo "press Enter key"
    read answer
    sudo apt-get install curl
fi

if( which clang &>/dev/null );then
  echo "clang is already installed"
  else
    numerr=$((numerr+1))
    echo "sudo apt-get install clang"
    echo "press Enter key"
    read answer
    sudo apt-get install clang
fi

if ( which gunzip &>/dev/null ); then
  echo "gunzip is already installed"
  else
    numerr=$((numerr+1))
    echo "sudo apt-get install gunzip"
    echo "press Enter key"
    read answer
    sudo apt-get install gunzip
fi

if( which gsl-config &>/dev/null );then
  echo "libgsl0-dev is already installed"
  else
    numerr=$((numerr+1))
    echo "sudo apt-get install libgsl0-dev"
    echo "press Enter key"
    read answer
    sudo apt-get install libgsl0-dev
fi

if( find /usr/include/gsm.h &>/dev/null );then
  echo "libgsm1-dev is already installed"
  else
    numerr=$((numerr+1))
    echo "sudo apt-get install libgsm1-dev"
    echo "press Enter key"
    read answer
    sudo apt-get install libgsm1-dev
fi

if( find /usr/include/curses.h &>/dev/null );then
  echo "libncurses5-dev is already installed"
  else
    numerr=$((numerr+1))
    echo "sudo apt-get install libncurses5-dev"
    echo "press Enter key"
    read answer
    sudo apt-get install libncurses5-dev
fi

if( find /usr/include/ncursesw/curses.h &>/dev/null );then
  echo "libncursesw5-dev is already installed"
  else
    numerr=$((numerr+1))
    echo "sudo apt-get install libncursesw5-dev"
    echo "press Enter key"
    read answer
    sudo apt-get install libncursesw5-dev
fi

if ( find /usr/share/build-essential &>/dev/null ); then
  echo "build-essential is already installed"
  else
    numerr=$((numerr+1))
    echo "sudo apt-get install build-essential"
    echo "press Enter key"
    read answer
    sudo apt-get install build-essential
fi

if( which java &>/dev/null );then
  echo "java is already installed"
  else
    numerr=$((numerr+1))
    echo "sudo apt-get install default-jre"
    echo "press Enter key"
    read answer
    sudo apt-get install default-jre
fi

if( find /usr/include/zlib.h &>/dev/null );then
  echo "zlib1g-dev is already installed"
  else
    numerr=$((numerr+1))
    echo "sudo apt-get install zlib1g-dev"
    echo "press Enter key"
    read answer
    sudo apt-get install zlib1g-dev
fi

if (( $numerr \> 0 ));then
  echo "Co "$numerr" phan mem chua duoc cai dat ..."
  else
  echo "ALL basic libs is OK...Press ENTER to NEXT..."
  read answer
fi
#####

#!/bin/bash
checkingbam()
{
  echo "Checking bamtools install"
  setupbam
  echo "Checking PATH for bamtools..."
  if find ${PATH//:/ } -maxdepth 1 -name bamtools 2> /dev/null| grep -q 'bamtools' ; then
    BAMTOOLS=$(find ${PATH//:/ } -maxdepth 1 -name bamtools 2> /dev/null | head -1)
    echo "bamtools da dat dung duong dan"
  else
    echo "bamtools dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setupbam()
{
  if( find bamtools &>/dev/null );then
    echo "bamtools is already installed"
    else
      echo "Downloading bamtools..."
      git clone https://github.com/pezmaster31/bamtools.git
      cd bamtools
      mkdir build
      cd build
      cmake ..
      make
      cd ../bin
      chmod +x bamtools
      echo "cd .."
      #read answer
      cd ../../
      #mv bedtools2 bedtools
      #cp bedtools-2.23.0.tar.gz ../Downloads
  fi
}
##########
numsofts=0
checkingbam
#!/bin/bash
checkingbed()
{
  echo "Checking bedtools install"
  setupbed
  echo "Checking PATH for bedtools..."
  if find ${PATH//:/ } -maxdepth 1 -name bedtools 2> /dev/null| grep -q 'bedtools' ; then
    BEDTOOLS=$(find ${PATH//:/ } -maxdepth 1 -name bedtools 2> /dev/null | head -1)
    echo "bedtools da dat dung duong dan"
  else
    echo "bedtools dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setupbed()
{
  if( find bedtools &>/dev/null );then
    echo "bedtools is already installed"
    else
      echo "Downloading bedtools..."
      curl -L -O https://github.com/arq5x/bedtools2/releases/download/v2.23.0/bedtools-2.23.0.tar.gz
      tar xvzf bedtools-2.23.0.tar.gz
      cd bedtools2
      make 
      cd bin
      chmod +x *
      echo "cd .."
      #read answer
      cd ..
      mv bedtools2 bedtools
      mv bedtools-2.23.0.tar.gz ../Downloads
  fi
}
##########
numsofts=0
checkingbed
#!/bin/bash
checkingbwa()
{
  echo "Checking bwa install"
  setupbwa
  echo "Checking PATH for bwa..."
  if find ${PATH//:/ } -maxdepth 1 -name bwa 2> /dev/null| grep -q 'bwa' ; then
    BWA=$(find ${PATH//:/ } -maxdepth 1 -name bwa 2> /dev/null | head -1)
    echo "bwa da dat dung duong dan"
  else
    echo "bwa dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setupbwa()
{
  if( find bwa &>/dev/null );then
    echo "bwa is already installed"
    else
      echo "Downloading bwa..."
      echo "git clone https://github.com/lh3/bwa.git"
      #read answer
      git clone https://github.com/lh3/bwa.git
      cd bwa
      make
      chmod +x bwa
      echo "cd .."
      #read answer
      cd ..
      cp bwa ../Downloads
  fi
}
##########
numsofts=0
checkingbwa
#!/bin/bash
checkingcdhit()
{
  echo "Checking cd-hit-est install"
  setupcdhit
  echo "Checking PATH for cd-hit-est..."
  if find ${PATH//:/ } -maxdepth 1 -name cd-hit-est 2> /dev/null| grep -q 'cd-hit-est' ; then
    CDHIT=$(find ${PATH//:/ } -maxdepth 1 -name cd-hit-est 2> /dev/null | head -1)
    echo "cd-hit-est da dat dung duong dan"
  else
    echo "cd-hit-est dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setupcdhit()
{
  if( find cd-hit-est &>/dev/null );then
    echo "cd-hit-est is already installed"
    else
      echo "Downloading cd-hit-est..."
      curl -L -O https://cdhit.googlecode.com/files/cd-hit-v4.6.1-2012-08-27.tgz
      tar xvzf cd-hit-v4.6.1-2012-08-27.tgz 
      cd cd-hit-v4.6.1-2012-08-27
      make openmp=yes
      chmod +x cd-hit-est cd-hit-est-2d
      echo "cd .."
      #read answer
      cd ..
      mv  cd-hit-v4.6.1-2012-08-27 cd-hit
      mv cd-hit-v4.6.1-2012-08-27.tgz ../Downloads
  fi
}
##########
numsofts=0
checkingcdhit
#!/bin/bash
checkingcmake()
{
  echo "Checking cmake install"
  setupcmake
  echo "Checking PATH for cmake..."
  if find ${PATH//:/ } -maxdepth 1 -name cmake 2> /dev/null ; then
    CMAKE=$(find ${PATH//:/ } -maxdepth 1 -name cmake 2> /dev/null | head -1)
    echo "cmake da dat dung duong dan"
  else
    echo "cmake dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setupcmake()
{
  if ( find cmake &>/dev/null ) ; then 
    echo "cmake is already installed"
    else
      echo "Downloading and installing cmake"
      curl -O https://cmake.org/files/v3.4/cmake-3.4.0-rc3.tar.gz
      tar xvzf cmake-3.4.0-rc3.tar.gz
      cd cmake-3.4.0-rc3
      ./configure
      make
      sudo make install
      cd ..
      mv cmake-3.4.0-rc3 cmake
      mv cmake-3.4.0-rc3.tar.gz ../Downloads
  fi
}
##########
numsofts=0
checkingcmake
#!/bin/bash
checkingfastx()
{
  echo "Checking fastx-toolkit install"
  setupfastx
  echo "Checking PATH for fastx-toolkit..."
  if find ${PATH//:/ } -maxdepth 1 -name fastq* 2> /dev/null| grep -q 'fastq-mcf' ; then
    FASTQ=$(find ${PATH//:/ } -maxdepth 1 -name fastq-mcf 2> /dev/null | head -1)
    echo "fastq-toolkit is right PATH"
  else
    echo "fastq-toolkit is wrong " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setupfastx()
{
  if( find ea-utils &>/dev/null );then
    echo "fastx-toolkit is already installed"
    else
      echo "Downloading eautils for fast-toolkit..."
      echo "curl -O https://ea-utils.googlecode.com/files/ea-utils.1.1.2-537.tar.gz"
      #read answer
      curl -O https://ea-utils.googlecode.com/files/ea-utils.1.1.2-537.tar.gz
      tar -zxvf ea-utils.1.1.2-537.tar.gz
      echo "cd ea-utils.1.1.2-537"
      mv ea-utils.1.1.2-537 ea-utils
      cd ea-utils
      #read answer
      echo "make"
      make
      echo "sudo make install"
      sudo make install
      cd ../
      echo "moving file to Downloads folder"
      mv ea-utils.1.1.2-537.tar.gz ../Downloads
  fi
}
##########
numsofts=0
checkingfastx
#!/bin/bash
checkfreeb()
{
  echo "Checking freebayes install"
  checkfreeb
#kiem tra tuong thich phan mem
  echo "Checking PATH for freebayes..."
  if find ${PATH//:/ } -maxdepth 1 -name freebayes 2> /dev/null ; then
    FREEBAYES=$(find ${PATH//:/ } -maxdepth 1 -name freebayes 2> /dev/null | head -1)
    echo "freebayes da dat dung duong dan"
  else
    echo "freebayes dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
  FREEB=(`freebayes | grep -oh 'v[0-9].*' | sed 's/-.*//g' `)	
  if [ "$FREEB" != "v0.9.21" ]; then
    echo "Phien ban freebayes hien co trong" '$PATH' "khong tuong thich."
    echo "Cai dat freebayes version 0.9.21"
  fi         	
}

setupfree()
{
  if ( find freebayes &>/dev/null ) ; then 
    echo "freebayes is already installed"
    else
      echo "Downloading and installing freebayes"
      git clone --recursive https://github.com/ekg/freebayes.git
      cd freebayes
      make
      cd bin
      chmod +x *
      cd ..
      cd vcflib
      make
      chmod +x ./bin/*
      cd ../../
  fi
}
##########
numsofts=0
checkfreeb
#!/bin/bash
checkinggnu()
{
  echo "Checking gnu install"
  setupgnu
  echo "Checking PATH for gnu..."
  if find ${PATH//:/ } -maxdepth 1 -name gnuplot 2> /dev/null| grep -q 'gnuplot' ; then
    GNUPLOT=$(find ${PATH//:/ } -maxdepth 1 -name gnuplot 2> /dev/null | head -1)
    echo "gnuplot da dat dung duong dan"
  else
    echo "gnuplot dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setupgnu()
{
  if( find gnuplot &>/dev/null );then
    echo "gnuplot is already installed"
    else
      echo "Downloading gnuplot..."
      curl -L -o gnuplot.tar.gz http://sourceforge.net/projects/gnuplot/files/gnuplot/5.0.1/gnuplot-5.0.1.tar.gz/download      

      tar xvzf gnuplot.x.tar.gz 
      cd gnuplot-* 
      ./configure
      make
      make install
      echo "cd .."
      #read answer
      cd ..
      mv  gnuplot-* gnuplot
      mv gnuplot.x.tar.gz ../Downloads
  fi
}
##########
numsofts=0
checkinggnu
#!/bin/bash
checkingmawk()
{
  echo "Checking trimommatic install"
  setupmawk
  echo "Checking PATH for trimmomatic..."
  if find ${PATH//:/ } -maxdepth 1 -name mawk 2> /dev/null| grep -q 'mawk' ; then
    MAWK=$(find ${PATH//:/ } -maxdepth 1 -name mawk 2> /dev/null | head -1)
    echo "mawk da dat dung duong dan"
  else
    echo "mawk dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setupmawk()
{
  if( find mawk &>/dev/null );then
    echo "mawk is already installed"
    else
      echo "Downloading mawk..."
      echo "curl -O http://invisible-island.net/datafiles/release/mawk.tar.gz"
      #read answer
      curl -O http://invisible-island.net/datafiles/release/mawk.tar.gz
      tar xvzf mawk.tar.gz
      cd mawk-1.*
      ./configure
      make
      chmod +x mawk
      echo "cd .."
      #read answer
      mv mawk-1.3.4-20150503 mawk
      cd ..
      mv mawk*gz ../Downloads
  fi
}
##########
numsofts=0
checkingmawk
#!/bin/bash
checkingpara()
{
  echo "Checking parallel install"
  setuppara
  echo "Checking PATH for parallel..."
  if find ${PATH//:/ } -maxdepth 1 -name parallel 2> /dev/null| grep -q 'parallel' ; then
    PARALLEL=$(find ${PATH//:/ } -maxdepth 1 -name parallel 2> /dev/null | head -1)
    echo "parallel da dat dung duong dan"
  else
    echo "parallel dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setuppara()
{
  if( find parallel &>/dev/null );then
    echo "parallel is already installed"
    else
      echo "Downloading parallel..."
      curl -L -O http://ftp.gnu.org/gnu/parallel/parallel-latest.tar.bz2
      tar xvjf parallel-latest.tar.bz2
      cd parallel*
      ./configure && make
      chmod +x ./src/parallel ./src/sem ./src/niceload ./src/sql
      cp src/parallel ./ && cp src/sem ./ && cp src/sql ./
      echo "cd .."
      #read answer
      cd ../
      mv parallel-20151222  parallel
      mv parallel-latest.tar.bz2 ../Downloads
  fi
}
##########
numsofts=0
checkingpara
#!/bin/bash
checkingpear()
{
  echo "Checking pear install"
  setuppear
  echo "Checking PATH for pear..."
  if find ${PATH//:/ } -maxdepth 1 -name pear 2> /dev/null| grep -q 'pear' ; then
    PEAR=$(find ${PATH//:/ } -maxdepth 1 -name pear 2> /dev/null | head -1)
    echo "pear da dat dung duong dan"
  else
    echo "pear dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setuppear()
{
  if( find pear &>/dev/null );then
    echo "pear is already installed"
    else
      echo "Downloading pear..."
      curl -L -O http://sco.h-its.org/exelixis/web/software/pear/files/pear-0.9.6-bin-64.tar.gz
      tar vxzf pear-0.9.6-bin-64.tar.gz 
      cd pear-0.9.6-bin-64
      cp -f pear-0.9.6-bin-64 pearRM
      chmod +x pearRM
      echo "cd .."
      #read answer
      cd ../
      mv pear-0.9.6-bin-64 pear
      mv pear-0.9.6-bin-64.tar.gz ../Downloads
  fi
}
##########
numsofts=0
checkingpear
#!/bin/bash
checkingrainbow()
{
  echo "Checking rainbow install"
  setuprainbow
  echo "Checking PATH for rainbow..."
  if find ${PATH//:/ } -maxdepth 1 -name rainbow 2> /dev/null| grep -q 'rainbow' ; then
    RAIN=$(find ${PATH//:/ } -maxdepth 1 -name rbasm 2> /dev/null | head -1)
    echo "rainbow is right PATH"
  else
    echo "rainbow is wrong " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setuprainbow()
{
  if( find rainbow &>/dev/null );then
    echo "rainbow is already installed"
    echo "checking newest version..."
    VER=(`rainbow | head -1 | cut -f2 -d' ' `)
    if [[ "$VER" == "2.0.4" ]];then
      echo "rainbow newest version..."
      else
      echo "Need to install newset version..."
    fi
    else
      echo "Downloading rainbow for assembly..."
      echo "curl -O http://sourceforge.net/projects/bio-rainbow/files/rainbow_2.0.4.tar.gz/download"
      #read answer
      curl -L -o rainbow_2.0.4.tar.gz http://sourceforge.net/projects/bio-rainbow/files/latest/download?source=files
      tar -zxvf rainbow_2.0.4.tar.gz
      echo "cd rainbow_2.0.4"
      mv rainbow_2.0.4 rainbow
      cd rainbow
      #read answer
      echo "make"
      make
      echo "sudo make install"
      sudo make install
      chmod 755 rainbow rbasm tags select_*
      cd ../
      echo "moving file to Downloads folder"
      mv rainbow_2.0.4.tar.gz ../Downloads
  fi
}
##########
numsofts=0
checkingrainbow
#!/bin/bash
checkingsam()
{
  echo "Checking bwa install"
  setupsam
  echo "Checking PATH for bwa..."
  if find ${PATH//:/ } -maxdepth 1 -name samtools 2> /dev/null| grep -q 'samtools' ; then
    SAMTOOLS=$(find ${PATH//:/ } -maxdepth 1 -name samtools 2> /dev/null | head -1)
    echo "samtools da dat dung duong dan"
  else
    echo "samtools dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setupsam()
{
  if( find samtools &>/dev/null );then
    echo "samtools is already installed"
    else
      echo "Downloading samtools..."
      echo "curl -L -o samtools-0.x.tar.bz2 http://sourceforge.net/projects/samtools/files/samtools/0.1.19/samtools-0.1.19.tar.bz2/download"
      #read answer
      curl -L -o samtools-0.x.tar.bz2 http://sourceforge.net/projects/samtools/files/samtools/0.1.19/samtools-0.1.19.tar.bz2/download
      tar xvjf samtools-0.x.tar.bz2
      cd samtools-0.1*
      make
      chmod +x samtools
      echo "cd .."
      #read answer
      cd ..
      mv samtools-0.1.19 samtools
      cd ..
      mv samtools-0.1.19.tar.bz2 ../Downloads
  fi
}
##########
numsofts=0
checkingsam
#!/bin/bash
checkingsetq()
{
  echo "Checking seqtk install"
  setupsetq
  echo "Checking PATH for seqtk..."
  if find ${PATH//:/ } -maxdepth 1 -name seqtk 2> /dev/null| grep -q 'seqtk' ; then
    SEQTK=$(find ${PATH//:/ } -maxdepth 1 -name seqtk 2> /dev/null | head -1)
    echo "seqtk da dat dung duong dan"
  else
    echo "seqtk dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setupsetq()
{
  if( find seqtk &>/dev/null );then
    echo "seqtk is already installed"
    else
      echo "Downloading seqtk..."
      git clone https://github.com/lh3/seqtk.git
      cd seqtk
      make
      chmod +x seqtk
      echo "cd .."
      #read answer
      cd ..
      #mv  gnuplot-* gnuplot
      #cp seqtk ../Downloads
  fi
}
##########
numsofts=0
checkingsetq
#!/bin/bash
checkingstacks()
{
  echo "Checking stacks install"
  setupstacks
  echo "Checking PATH for stacks..."
  if find ${PATH//:/ } -maxdepth 1 -name stacks 2> /dev/null| grep -q 'stacks' ; then
    STACKS=$(find ${PATH//:/ } -maxdepth 1 -name stacks 2> /dev/null | head -1)
    echo "stacks da dat dung duong dan"
  else
    echo "stacks dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setupstacks()
{
  if( find stacks &>/dev/null );then
    echo "stacks is already installed"
    else
      echo "Downloading stacks..."
      curl -L -o stacks-1.35.tar.gz "http://catchenlab.life.illinois.edu/stacks/source/stacks-1.35.tar.gz"	
      tar -zxvf stacks-1.35.tar.gz
      cd stacks-1.35
      ./configure
      make
      cd ../
      mv stacks-1.35 stacks 
      mv stacks-1.35.tar.gz ../Downloads/
  fi
}
##########
numsofts=0
checkingstacks
#!/bin/bash
checkingtrim()
{
  echo "Checking trimommatic install"
  setuptrim
  echo "Checking PATH for trimmomatic..."
  if find ${PATH//:/ } -maxdepth 1 -name trimmomatic*jar 2> /dev/null| grep -q 'trim' ; then
    TRIMMOMATIC=$(find ${PATH//:/ } -maxdepth 1 -name trimmomatic*jar 2> /dev/null | head -1)
    echo "trimmomatic da dat dung duong dan"
  else
    echo "trimmomatic dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setuptrim()
{
  if( find trimmomatic &>/dev/null );then
    echo "trimmomatic is already installed"
    else
      echo "Downloading trimmomatic..."
      echo "curl -O http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.33.zip"
      #read answer
      curl -O http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.33.zip
      echo "cd trimmomatic"
      #read answer
      unzip Trimmomatic-0.33.zip
      mv Trimmomatic-0.33 trimmomatic
      cd trimmomatic
      mv trimmomatic-0.33.jar trimmomatic.jar
      cd ..
      mv Trimmomatic-0.33.zip ../Downloads
  fi
}
##########
numsofts=0
checkingtrim
#!/bin/bash
checkingvscan()
{
  echo "Checking varscan install"
  setupvscan
  echo "Checking PATH for varscan..."
  if find ${PATH//:/ } -maxdepth 1 -name varscan.jar 2> /dev/null| grep -q 'varscan' ; then
    VARSCAN=$(find ${PATH//:/ } -maxdepth 1 -name varscan.jar 2> /dev/null | head -1)
    echo "varscan da dat dung duong dan"
  else
    echo "varscan dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setupvscan()
{
  if( find varscan.jar &>/dev/null );then
    echo "VarScan is already installed"
    else
      echo "Downloading VarScan..."
      curl -L -o VarScan.v2.3.7.jar "http://sourceforge.net/projects/varscan/files/VarScan.v2.3.7.jar/download"	
      mv VarScan.v2.3.7.jar varscan.jar
      chmod 755 varscan
      #echo "cd .."
      #read answer
     #cp varscan ../Downloads
  fi
}
##########
numsofts=0
checkingvscan
#!/bin/bash
checkingvcf()
{
  echo "Checking vcftools install"
  setupvcf
  echo "Checking PATH for vcftools..."
  if find ${PATH//:/ } -maxdepth 1 -name vcftools 2> /dev/null| grep -q 'vcftools' ; then
    VCFTOOLS=$(find ${PATH//:/ } -maxdepth 1 -name vcftools 2> /dev/null | head -1)
    echo "vcftools da dat dung duong dan"
  else
    echo "vcftools dat sai duong dan " $PATH"."
    numsofts=$((numsofts + 1))
  fi
}

setupvcf()
{
  if( find vcftools &>/dev/null );then
    echo "vcftools is already installed"
    else
      echo "Downloading vcftools..."
      curl -L -o vcftools_x.tar.gz "http://downloads.sourceforge.net/project/vcftools/vcftools_0.1.11.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fvcftools%2Ffiles%2F%3Fsource%3Dnavbar&ts=1398959218&use_mirror=hivelocity"	
      tar xvzf vcftools_x.tar.gz
      cd vcftools_0*
      make
      chmod +x ./bin/vcftools
      echo "cd .."
      #read answer
      cd ..
      mv vcftools_0.1.11 vcftools
      mv vcftools_x.tar.gz ../Downloads
  fi
}
##########
numsofts=0
checkingvcf
